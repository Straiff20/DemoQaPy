workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
      when: never
    - when: always

stages:
  - test
  - report

run_tests:
  stage: test
  image: python
  artifacts:
    when: always
    expire_in: 1 day
    paths:
      - allure-report
  before_script:
  # - 'curl --location --output artifacts.zip "https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/jobs/artifacts/main/download?job=pages&job_token=$CI_JOB_TOKEN"'
    - 'curl --location --output artifacts.zip --header "PRIVATE-TOKEN: $MY_TOKEN" "https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/jobs/artifacts/main/download?job=pages"'
    - unzip artifacts.zip
    - chmod -R 777 public
    - mkdir allure-results && cp -r public/history allure-results
    - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
    - sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
    - apt-get update && apt-get install -y google-chrome-stable
    - apt update && apt install -y openjdk-17-jdk openjdk-17-jre
    - wget https://github.com/allure-framework/allure2/releases/download/2.25.0/allure-2.25.0.tgz && tar -zxvf allure-2.25.0.tgz -C /opt/ && ln -s /opt/allure-2.25.0/bin/allure /usr/bin/allure
    - pip install -r requirements.txt
    - pip install selenium --upgrade

  script:
    - pytest -v --alluredir=allure-results
  after_script:
    - allure generate -c allure-results -o allure-report

pages:
  stage: report
  needs:
    - run_tests
  script:
    - mkdir public
    - cp -r allure-report/* public
  artifacts:
    when: on_success
    expire_in: never
    paths:
      - public
